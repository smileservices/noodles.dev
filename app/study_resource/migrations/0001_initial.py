# Generated by Django 3.0.7 on 2020-10-27 11:44

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import tsvector_field
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('technology', '0001_initial'),
        ('tag', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thumbs_up_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('thumbs_down_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudyResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('thumbs_up_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('thumbs_down_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('publication_date', models.DateField()),
                ('published_by', models.CharField(max_length=256)),
                ('url', models.TextField(max_length=1024, unique=True)),
                ('summary', models.TextField(max_length=2048)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.IntegerField(choices=[(0, 'free'), (1, 'paid')], db_index=True, default=0)),
                ('media', models.IntegerField(choices=[(0, 'article'), (1, 'video'), (3, 'series'), (4, 'course'), (5, 'book')], db_index=True, default=0)),
                ('experience_level', models.IntegerField(choices=[(0, 'absolute beginner'), (1, 'junior'), (2, 'middle'), (3, 'experienced')], db_index=True, default=0)),
                ('search_vector_index', tsvector_field.SearchVectorField(columns=[tsvector_field.WeightedColumn('name', 'A'), tsvector_field.WeightedColumn('summary', 'B')], language='english')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(related_name='resources', to='tag.Tag')),
                ('technologies', models.ManyToManyField(related_name='resources', to='technology.Technology')),
            ],
        ),
        migrations.CreateModel(
            name='StudyResourceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='tutorials')),
                ('image_url', models.URLField(blank=True, default='', null=True)),
                ('study_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='study_resource.StudyResource')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thumbs_up_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('thumbs_down_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('rating', models.IntegerField()),
                ('text', models.TextField(max_length=2048)),
                ('visible', models.BooleanField(default=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('study_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='study_resource.StudyResource')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalStudyResource',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('thumbs_up_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('thumbs_down_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('publication_date', models.DateField()),
                ('published_by', models.CharField(max_length=256)),
                ('url', models.TextField(db_index=True, max_length=1024)),
                ('summary', models.TextField(max_length=2048)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('price', models.IntegerField(choices=[(0, 'free'), (1, 'paid')], db_index=True, default=0)),
                ('media', models.IntegerField(choices=[(0, 'article'), (1, 'video'), (3, 'series'), (4, 'course'), (5, 'book')], db_index=True, default=0)),
                ('experience_level', models.IntegerField(choices=[(0, 'absolute beginner'), (1, 'junior'), (2, 'middle'), (3, 'experienced')], db_index=True, default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical study resource',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CollectionResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_resource.Collection')),
                ('study_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study_resource.StudyResource')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='resources',
            field=models.ManyToManyField(related_name='collections', through='study_resource.CollectionResources', to='study_resource.StudyResource'),
        ),
        migrations.AddField(
            model_name='collection',
            name='tags',
            field=models.ManyToManyField(related_name='collections', to='tag.Tag'),
        ),
        migrations.AddField(
            model_name='collection',
            name='technologies',
            field=models.ManyToManyField(related_name='collections', to='technology.Technology'),
        ),
        migrations.AddIndex(
            model_name='studyresource',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name', 'summary'], name='gintrgm_index', opclasses=['gin_trgm_ops', 'gin_trgm_ops']),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('author', 'study_resource')},
        ),
    ]
